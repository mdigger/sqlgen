// Code generated by sqlgen. DO NOT EDIT.
// version: github.com/mdigger/sqlgen v0.1.0

package example

import (
	"context"
	"database/sql"
	"errors"
)

type Queries struct {
	db interface {
		ExecContext(context.Context, string, ...interface{}) (sql.Result, error)
		QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error)
		QueryRowContext(context.Context, string, ...interface{}) *sql.Row
	}
}

func New(db *sql.DB) Queries {
	return Queries{db: db}
}

var (
	ErrTxNotSupported = errors.New("sql: transaction not supported")
	ErrNoRows         = sql.ErrNoRows
)

func (q Queries) WithTx(ctx context.Context, opt *sql.TxOptions, f func(q Queries) error) (err error) {
	db, ok := q.db.(interface {
		BeginTx(context.Context, *sql.TxOptions) (*sql.Tx, error)
	})
	if !ok {
		return ErrTxNotSupported
	}

	tx, err := db.BeginTx(ctx, opt)
	if err != nil {
		return err
	}

	defer func() {
		if err == nil {
			err = tx.Commit()
		}
		if err != nil {
			err = tx.Rollback()
		}
	}()

	return f(Queries{db: tx})
}
